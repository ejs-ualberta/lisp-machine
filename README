!!!WARNING!!!

This code is not guaranteed to be good, correct, complete, or practical! Everything in here is experimental and there are a lot of things that could have been done better! In particular there are some poor programming practices in this repo because this is a personal project for fun and learning, nothing else. Including having minimal if any error handling. All the code in this repo (except for the gnu-efi code which is not mine) is under the GPLv3. There are now two versions, one for x86_64 and one for the raspberry pi 3. This code is made for Linux so may not work on any other OS, and is not even guaranteed to work on somebody else's Linux box. You will need Clang to build this and qemu with ovmf (for x86_64) or Virtualbox to run it, but there may be problems if you use Virtualbox. Specifically, for me the x86_64 version it wouldn't boot on its own for some reason (untested with the raspberry pi version), but I could still run it from the EFI shell. On boot it will load the code in the kernel file and execute it (x86_64) or in the case of the raspberry pi version currently the code is located in kernel.c. Right now there is an asm compiler and bytecode interpreter, and also a sort of lisp interpreter as well. Current work is on the gc, future work will be focused on unifying asm and lisp.

Happy hacking! :)

P.S. How did you even find this lol